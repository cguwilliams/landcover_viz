tract_poly <- tract_poly[order(tract_poly$order),]
sightings <- ggplot(ufodata, aes(x=longitude,y=latitude)) + geom_point(colour='#669966', fill = '#66CC33', shape = 21) +
theme(panel.background = element_blank(),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
sightings.grob <- ggplotGrob(sightings)
# all forest
plot.cropcircles <- ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Percent forest cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.", colour="white",
size=5, family="Courier", fontface="bold")
plot.cropcircles
sightings <- ggplot(ufodata, aes(x=longitude,y=latitude)) + geom_point(colour='#669966', fill = '#66CC33', alpha = .5, shape = 21) +
theme(panel.background = element_blank(),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
sightings.grob <- ggplotGrob(sightings)
# all forest
plot.cropcircles <- ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural land cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.", colour="white",
size=5, family="Courier", fontface="bold")
plot.cropcircles
ggsave(filename = '~/Documents/projectdata/kildall/cropcircles.png', plot.all_forest, width = 10, height = 8, units = "in", dpi = 300)
ggsave(filename = '~/Documents/projectdata/kildall/cropcircles.png', plot.cropcircles, width = 10, height = 8, units = "in", dpi = 300)
plot.cropcircles <- ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural\nland cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.", colour="white",
size=5, family="Courier", fontface="bold")
ggsave(filename = '~/Documents/projectdata/kildall/cropcircles.png', plot.cropcircles, width = 10, height = 8, units = "in", dpi = 300)
head(ufodata)
min(ufodata$date.sighted)
head(sort(ufodata$date.sighted))
head(sort(ufodata$date.sighted),n=100)
head(sort(ufodata$date.sighted),n=1000)
tail(sort(ufodata$date.sighted),n=1000)
ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural\nland cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.\nUFO sightings 1880-2010", colour="white",
size=5, family="Courier", fontface="bold")
?coord_equal
ggplot(ufodata, aes(x=longitude,y=latitude)) + geom_point(colour='#669966', fill = '#66CC33', alpha = .5, shape = 21) +
coord_equal() +
theme(panel.background = element_blank(),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
sightings.grob <- ggplotGrob(sightings)
# all forest
plot.cropcircles <- ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural\nland cover') +
coord_equal() +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.\nUFO sightings 1880-2010", colour="white",
size=5, family="Courier", fontface="bold")
plot.cropcircles
ufodata_df <- project(cbind(ufodata$longitude, ufodata$latitude), proj="+init=ESRI:54030")
head(ufodata_df)
head(ufodata)
states.all.shp@proj4string
ufodata_df <- project(cbind(ufodata$longitude, ufodata$latitude), proj="+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
head(ufodata)
head(ufodata_df)
str(ufodata_df)
ufodata_df <- as.data.frame(ufodata_df)
names(ufodata_df)
ufodata_df <- project(cbind(ufodata$longitude, ufodata$latitude), proj="+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
ufodata_df <- as.data.frame(ufodata_df)
names(ufodata_df) <- c("longitude", "latitude")
sightings <- ggplot(ufodata_df, aes(x=longitude,y=latitude)) + geom_point(colour='#669966', fill = '#66CC33', alpha = .5, shape = 21) +
theme(panel.background = element_blank(),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
sightings
sightings.grob <- ggplotGrob(sightings)
# all forest
plot.cropcircles <- ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural\nland cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.\nUFO sightings 1880-2010", colour="white",
size=5, family="Courier", fontface="bold")
plot.cropcircles
head(ufodata_df)
head(ufodata)
sightings <- ggplot(ufodata_df, aes(x=longitude,y=latitude)) +
geom_point(colour='#669966', fill = '#66CC33', alpha = .5, shape = 21) +
theme(panel.background = element_blank(),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),axis.title.y=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank())
sightings.grob <- ggplotGrob(sightings)
ggplot(tract_poly, aes(x = long, y = lat, group = group)) +
geom_polygon(color = "white", size = 0.01, aes(fill = all_ag)) +     #counties
geom_polygon(data=tract_states, color = "#99ccff", size=.05, fill=NA) + #states
scale_fill_continuous(low = "#000000", high = "#FF6600", space = "Lab", na.value = "grey50",
guide = "colourbar", name = 'Barren and agricultural\nland cover') +
annotation_custom(grob = sightings.grob) +
theme(panel.background = element_rect(fill = "#000033"),
axis.line=element_blank(),axis.text.x=element_blank(),
axis.text.y=element_blank(),axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),legend.justification=c(1,0), legend.position=c(1,0),
panel.background=element_blank(),panel.border=element_blank(),
panel.grid.major=element_blank(),
panel.grid.minor=element_blank(),plot.background=element_blank()) +
annotate(geom="text", x=-79, y=48, label="The truth is out there.\nUFO sightings 1880-2010", colour="white",
size=5, family="Courier", fontface="bold")
str(tract_poly)
str(tract_geom)
tract_geom@names
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
head(ufodata)
head(ufodata_df)
ufodata_df <- project(cbind(ufodata$longitude, ufodata$latitude), proj="+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
head(ufodata_df)
ufodata_df <- as.data.frame(ufodata_df)
names(ufodata_df) <- c("longitude", "latitude")
head(ufodata_df)
str(county.all.shp)
names(count.shp.all)
names(county.all.shp)
county.all.shp@data
head(county.all.shp@data)
head(tract_geom)
min(tract_geom$long)
max(tract_geom$long)
min(tract_geom$lat)
left = min(tract_geom$long)
bottom = min(tract_geom$lat)
right = max(tract_geom$long)
top = 4max(tract_geom$lat)
top = max(tract_geom$lat)
ufodata_df <- ufodata_df[ufodata_df$longitude > left & ufodata_df$longitude < right,]
ufodata_df
ufodata_df <- as.data.frame(ufodata_df)
ufodata_df <- project(cbind(ufodata$longitude, ufodata$latitude), proj="+proj=longlat +datum=NAD83 +no_defs +ellps=GRS80 +towgs84=0,0,0")
ufodata_df <- as.data.frame(ufodata_df)
ufodata_df
max(ufodata_df$V1)
min(ufodata_df$V1)
rm(list = ls())
# pull filepaths for both groups of shoppers
filepath.raw      <- ('~/Documents/ipsos/shopper/data/Schnucks Sync txt')
# filepath.dest     <- ('~/Documents/ipsos/shopper/images/')
filenames.raw     <- Sys.glob(file.path(filepath.raw,"*.txt"))
pid <- data.frame(this_pid=substr(filenames.raw, nchar(filenames.raw)-18, nchar(filenames.raw)-14))
# Ppts with wondky (no) onset
#no_onset <- as.character(c(61228,61243,61256))
#pid.sub <- data.frame(this_pid=pid$this_pid[!(pid$this_pid %in% no_onset)])
# Convert participant id values (this_pid) from factor to character
pid.sub <- pid
pid.sub$this_pid <- as.character(pid$this_pid)
used_files <- filenames.raw[pid$this_pid %in% as.character(pid.sub$this_pid)]
data.out = data.frame()
i = 2
Lines <- readLines(used_files[i])
Lines
i = 3
Lines <- readLines(used_files[i])
Lines
grepl('hold', Lines[j])
j = 5
grepl('hold', Lines[j])
grepl('flower', Lines[j])
grepl('flower', Lines[j]) & grepl('hold',Lines[j])
grepl('flower', Lines[j]) & !grepl('hold',Lines[j])
grepl('hold',Lines[j])
j = 7
grepl('hold',Lines[j])
j = 5
grepl('flower', Lines[j]) & !grepl('hold',Lines[j])
onset  <- strsplit(Lines[j],',') [[1]][1]
onset
Lines
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset.sec
onset.decisec
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onset
onsetHMS <- strftime(onset,'%H:%M:%OS1')
onsetHMS
this.data$flower <- 1
onsetparts.3  <- strsplit(onsetHMS,":")
onset.3.H <- as.numeric(onsetparts.3[[1]][1])
onset.3.M <- as.numeric(onsetparts.3[[1]][2])
onset.3.S <- as.numeric(onsetparts.3[[1]][3])
onset.3.H.sec <- (onset.3.H)*60*60
onset.3.M.sec <- (onset.3.M)*60
onset.3.S.sec <- (onset.3.S)
onset.3.H.sec
onset.3.M.sec
onset.3.S.sec
onset.3.sec <- sum(c(onset.3.H.sec,onset.3.M.sec,onset.3.S.sec))
onset.3.sec
this.data <- data.frame(pid=0,flower=0,onset.hold_flower_sec=0,onset.hold_flower_min=0,
onset.see_flower_sec=0,onset.see_flower_min=0,onset.eyetrack_sec=0)
for (j in 1 : length(Lines)) {
if (grepl('shimmer', Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
onset.eyetracking  <- onsetHMS
####
onsetparts.1  <- strsplit(onsetHMS,":")
onset.1.H <- as.numeric(onsetparts.1[[1]][1])
onset.1.M <- as.numeric(onsetparts.1[[1]][2])
onset.1.S <- as.numeric(onsetparts.1[[1]][3])
onset.1.H.sec <- (onset.1.H)*60*60
onset.1.M.sec <- (onset.1.M)*60
onset.1.S.sec <- (onset.1.S)
onset.1.sec <- sum(c(onset.1.H.sec,onset.1.M.sec,onset.1.S.sec))
this.data$onset.eyetrack_sec <- onset.1.sec
} else if (grepl('hold',Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
this.data$flower <- 1
#### Onset for flower hold
onsetparts.3  <- strsplit(onsetHMS,":")
onset.3.H <- as.numeric(onsetparts.3[[1]][1])
onset.3.M <- as.numeric(onsetparts.3[[1]][2])
onset.3.S <- as.numeric(onsetparts.3[[1]][3])
onset.3.H.sec <- (onset.3.H)*60*60
onset.3.M.sec <- (onset.3.M)*60
onset.3.S.sec <- (onset.3.S)
onset.3.sec <- sum(c(onset.3.H.sec,onset.3.M.sec,onset.3.S.sec))
this.data$onset.hold_flower_sec   <- onset.3.sec - onset.1.sec
this.data$onset.hold_flower_min   <- onset.3.sec/60 - onset.1.sec/60
}else if (grepl('flower', Lines[j]) & !grepl('hold',Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
this.data$flower <- 1
#### Onset for flower hold
onsetparts.3  <- strsplit(onsetHMS,":")
onset.3.H <- as.numeric(onsetparts.3[[1]][1])
onset.3.M <- as.numeric(onsetparts.3[[1]][2])
onset.3.S <- as.numeric(onsetparts.3[[1]][3])
onset.3.H.sec <- (onset.3.H)*60*60
onset.3.M.sec <- (onset.3.M)*60
onset.3.S.sec <- (onset.3.S)
onset.3.sec <- sum(c(onset.3.H.sec,onset.3.M.sec,onset.3.S.sec))
this.data$onset.see_flower_sec   <- onset.3.sec - onset.1.sec
this.data$onset.see_flower_min   <- onset.3.sec/60 - onset.1.sec/60
}
data.out <- rbind(data.out, this.data)
for (j in 1 : length(Lines)) {
if (grepl('shimmer', Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
onset.eyetracking  <- onsetHMS
####
onsetparts.1  <- strsplit(onsetHMS,":")
onset.1.H <- as.numeric(onsetparts.1[[1]][1])
onset.1.M <- as.numeric(onsetparts.1[[1]][2])
onset.1.S <- as.numeric(onsetparts.1[[1]][3])
onset.1.H.sec <- (onset.1.H)*60*60
onset.1.M.sec <- (onset.1.M)*60
onset.1.S.sec <- (onset.1.S)
onset.1.sec <- sum(c(onset.1.H.sec,onset.1.M.sec,onset.1.S.sec))
this.data$onset.eyetrack_sec <- onset.1.sec
} else if (grepl('hold',Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
this.data$flower <- 1
#### Onset for flower hold
onsetparts.3  <- strsplit(onsetHMS,":")
onset.3.H <- as.numeric(onsetparts.3[[1]][1])
onset.3.M <- as.numeric(onsetparts.3[[1]][2])
onset.3.S <- as.numeric(onsetparts.3[[1]][3])
onset.3.H.sec <- (onset.3.H)*60*60
onset.3.M.sec <- (onset.3.M)*60
onset.3.S.sec <- (onset.3.S)
onset.3.sec <- sum(c(onset.3.H.sec,onset.3.M.sec,onset.3.S.sec))
this.data$onset.hold_flower_sec   <- onset.3.sec - onset.1.sec
this.data$onset.hold_flower_min   <- onset.3.sec/60 - onset.1.sec/60
}else if (grepl('flower', Lines[j]) & !grepl('hold',Lines[j])) {
onset  <- strsplit(Lines[j],',') [[1]][1]
onset.sec <- strsplit(onset,"-")[[1]][1]
onset.decisec <- as.numeric(strsplit(onset,"-")[[1]][2])
onset <- as.POSIXct(paste(Sys.Date(),' ',onset.sec,".",onset.decisec,sep=""))
onsetHMS <- strftime(onset,'%H:%M:%OS1')
this.data$flower <- 1
#### Onset for flower hold
onsetparts.3  <- strsplit(onsetHMS,":")
onset.3.H <- as.numeric(onsetparts.3[[1]][1])
onset.3.M <- as.numeric(onsetparts.3[[1]][2])
onset.3.S <- as.numeric(onsetparts.3[[1]][3])
onset.3.H.sec <- (onset.3.H)*60*60
onset.3.M.sec <- (onset.3.M)*60
onset.3.S.sec <- (onset.3.S)
onset.3.sec <- sum(c(onset.3.H.sec,onset.3.M.sec,onset.3.S.sec))
this.data$onset.see_flower_sec   <- onset.3.sec - onset.1.sec
this.data$onset.see_flower_min   <- onset.3.sec/60 - onset.1.sec/60
}
}
this.data
source('~/.active-rstudio-document', echo=TRUE)
source('~/Documents/ipsos/shopper/scripts/syncTXT_flower_sec.R', echo=TRUE)
timestamps <- read.csv('~/Documents/ipsos/shopper/data/shopper_timing_102715.csv',stringsAsFactors=F)
timestamps.flower <- timestamps[timestamps$flower==1,]
timestamps.flower
pids.flower   <- timestamps$pid[timestamps$flower==1]
pids.noflower <- timestamps$pid[timestamps$flower==0]
pids.flower
pids.noflower
length(flower_files)
# Outputting the basic data timeseries for SC and HR - 10/25/2015
# Patrick B. Williams
# load libraries
library(dplyr)
library(ggplot2)
# Clear workspace (except loaded packages)
rm(list = ls())
# Define filepaths for origin files and for output files
filepath.processed <- ('~/Documents/ipsos/shopper/data/processed/cleanSC_cleanBPM')     # Filepath for processed ts data
# Gather files from filepath.processed that end in 'clean.csv'
filenames.processed <- Sys.glob(file.path(filepath.processed,"*clean.csv"))
# Import timestamps for shimmer onset and timestamps for flower hold
timestamps <- read.csv('~/Documents/ipsos/shopper/data/shopper_timing_102715.csv',stringsAsFactors=F)
timestamps.flower <- timestamps[timestamps$flower==1,]
pids.flower   <- timestamps$pid[timestamps$flower==1]
pids.noflower <- timestamps$pid[timestamps$flower==0]
# Create single column data frame of id's for all participants and
# Convert participant id values (this_pid) from factor to character
pid <- data.frame(this_pid=substr(filenames.processed, nchar(filenames.processed)-14, nchar(filenames.processed)-10))
pid$this_pid <- as.character(pid$this_pid)
# # Subset processed data file to flower/noflower recipients
flower_files <- filenames.processed[pid$this_pid %in% as.character(pids.flower)]
noflower_files <- filenames.processed[pid$this_pid %in% as.character(pids.noflower)]
length(flower_files)
mydata = read.csv(flower_files[i], stringsAsFactors = F)
i = 1
mydata = read.csv(flower_files[i], stringsAsFactors = F)
timestamps.flower
length(timestamps.flower)
nrow(timestamps.flower)
ggplot(data=mydata, aes(x = mins, y = sc_2hzlp_sqrt_norm)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min) +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
ggplot(data=mydata, aes(x = mins, y = sc_2hzlp_sqrt_norm)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min, color = 'red') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
ggplot(data=mydata, aes(x = mins, y = sc_2hzlp_sqrt_norm)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
ggplot(data=mydata, aes(x = mins, y = sc_2hzlp_sqrt_norm)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
geom_vline(xintercept=timestamps.flower$onset.hold_flower_min[i], color = 'blue') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
ggplot(data=mydata, aes(x = mins, y = bpm.rp.mean)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
geom_vline(xintercept=timestamps.flower$onset.hold_flower_min[i], color = 'blue') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
i = 2
mydata = read.csv(flower_files[i], stringsAsFactors = F)
#         this_pid <- pid$this_pid[i]
sc_plot <- ggplot(data=mydata, aes(x = mins, y = sc_2hzlp_sqrt_norm)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
geom_vline(xintercept=timestamps.flower$onset.hold_flower_min[i], color = 'blue') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
hr_plot <- ggplot(data=mydata, aes(x = mins, y = bpm.rp.mean)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
geom_vline(xintercept=timestamps.flower$onset.hold_flower_min[i], color = 'blue') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
sc_plot
hr_plot
length(pids.flower)
this_pid <- pids.flower[i]
this_pid
ggsave(filename = paste('~/Documents/ipsos/shopper/images/basic_timeseries_102515/',this_pid,'_seeandhold.png',sep=''),
sc_plot, width = 12, height = 3, units = "in", dpi = 300)
ggplot(data=mydata, aes(x = mins, y = bpm.rp.mean)) + geom_line()  +
geom_vline(xintercept=timestamps.flower$onset.see_flower_min[i], color = 'red') +
geom_vline(xintercept=timestamps.flower$onset.hold_flower_min[i]-5, color = 'blue') +
scale_x_continuous(breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),1),
minor_breaks = seq(floor(min(mydata$mins)),floor(max(mydata$mins)),.1)) +
xlab('minutes (minor breaks - deciminutes)') + ylab('skin conductance')
names(mydata)
pre_sight <- mydata$sc_2hzlp_sqrt_norm[mydata$mins < timestamps.flower$onset.see_flower_min &
mydata$mins > timestamps.flower$onset.see_flower_min - 5]
plot(pre_sight)
plot(pre_sight,type='l')
presight.hr <- mydata$bpm.rp.mean[mydata$mins < timestamps.flower$onset.see_flower_min &
mydata$mins > timestamps.flower$onset.see_flower_min - 5]
presight.sc <- mydata$sc_2hzlp_sqrt_norm[mydata$mins < timestamps.flower$onset.see_flower_min &
mydata$mins > timestamps.flower$onset.see_flower_min - 5]
presight.sc <- mydata$sc_2hzlp_sqrt_norm[mydata$mins < timestamps.flower$onset.see_flower_min[i] &
mydata$mins > timestamps.flower$onset.see_flower_min[i] - 5]
plot(pre_sight,type='l')
presight.hr <- mydata$bpm.rp.mean[mydata$mins < timestamps.flower$onset.see_flower_min[i] &
mydata$mins > timestamps.flower$onset.see_flower_min[i] - 5]
sighted <- timestamps.flower$onset.see_flower_min[i]
presight.sc <- mydata$sc_2hzlp_sqrt_norm[mydata$mins < sighted & mydata$mins > sighted - 5]
sighted
quit()
